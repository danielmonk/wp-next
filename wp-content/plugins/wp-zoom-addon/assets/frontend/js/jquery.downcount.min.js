! function (t) {
    function redirect_to_non_cached_page() {
        var redirect_url = new URL(window.location.href);
        redirect_url.searchParams.set('nocache', new Date().valueOf() + Math.floor(Math.random() * 1e9));
        redirect_url.searchParams.set('join', 1);
        window.location.replace(redirect_url.href);
    }
    t(document).ready(function () {
        // Long poll to see if meeting has started already
        setInterval(zoom_wp_long_polling, 60000);
        function zoom_wp_long_polling() {
            var data = {
                "action": "zoom_wp_countdown_check_meeting_started",
                "meeting_id": zvc_array.meeting_number,
                "is_webinar": zvc_array.is_webinar,
                "nonce": zvc_array.nonce
            };
            t.ajax({
                url: zvc_array.ajax_url + '?' + t.param(data),
                dataType: "json",
                type: 'GET',
                success: function (data, statusText, jqXHR) {
                    if (data) {
                        clearInterval(zoom_wp_long_polling);
                        redirect_to_non_cached_page();
                    }
                },
            });
        };

        t("[id^=countdowns]").each(function (key, value) {
            var date_time = t(value).attr('data-meeting-time');
            var type_id = t(value).attr('data-meeting-id');

            if (date_time && date_time != "Invalid Date") {
                t('#countdowns-' + type_id).downCount({
                    date: date_time,
                    offset: (new Date()).getTimezoneOffset() / -60,
                    type_id: type_id
                }, function () {
                    setTimeout(function () {
                        redirect_to_non_cached_page();
                    });
                });
            }
        });
    });
    t.fn.downCount = function (e, a) {
        var n = t.extend({
            date: null,
            offset: null,
            type_id: null
        }, e);
        n.date || t.error("Date is not defined."), Date.parse(n.date) || t.error("Incorrect date format, it should look like this, 12/24/2012 12:00:00.");

        var r = setInterval(function () {
            var e = new Date(n.date) - function () {

                var t = new Date,
                    e = t.getTime() + 6e4 * t.getTimezoneOffset();
                return new Date(e + 36e5 * n.offset)
            }();

            if (e < 0) return clearInterval(r), void (a && "function" == typeof a && a());
            var o = Math.floor(e / 864e5),
                s = Math.floor(e % 864e5 / 36e5),
                d = Math.floor(e % 36e5 / 6e4),
                l = Math.floor(e % 6e4 / 1e3),
                f = 1 === (o = String(o).length >= 2 ? o : "0" + o) ? t(".days_ref").attr("data-translate-single") : "01" == o || "00" == o ? t(".days_ref").attr("data-translate-single") : t(".days_ref").attr("data-translate-plural"),
                i = 1 === (s = String(s).length >= 2 ? s : "0" + s) ? t(".hours_ref").attr("data-translate-single") : "01" == s || "00" == s ? t(".hours_ref").attr("data-translate-single") : t(".hours_ref").attr("data-translate-plural"),
                u = 1 === (d = String(d).length >= 2 ? d : "0" + d) ? t(".minutes_ref").attr("data-translate-single") : "01" == d || "00" == d ? t(".minutes_ref").attr("data-translate-single") : t(".minutes_ref").attr("data-translate-plural"),
                c = 1 === (l = String(l).length >= 2 ? l : "0" + l) ? t(".seconds_ref").attr("data-translate-single") : "01" == l || "00" == l ? t(".seconds_ref").attr("data-translate-single") : t(".seconds_ref").attr("data-translate-plural");
            t("#countdowns-" + n.type_id).find(".days").text(o), t("#countdowns-" + n.type_id).find(".hours").text(s), t("#countdowns-" + n.type_id).find(".minutes").text(d), t("#countdowns-" + n.type_id).find(".seconds").text(l), t("#countdowns-" + n.type_id).find(".days_ref").text(f), t("#countdowns-" + n.type_id).find(".hours_ref").text(i), t("#countdowns-" + n.type_id).find(".minutes_ref").text(u), t("#countdowns-" + n.type_id).find(".seconds_ref").text(c)
        }, 1e3)
    }
}(jQuery);